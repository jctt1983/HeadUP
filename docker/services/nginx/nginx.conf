map $http_origin $cors_header {
    default "";
    "~^https?://(localhost|(.*\.)?headup\.space)" "$http_origin";
}

map $http_upgrade $connection_upgrade {
	default upgrade;
	''      close;
}

server {
    # the port your site will be served on
	listen 80 default_server;
	listen [::]:80 default_server ipv6only=on;

	# the domain name it will serve for
	server_name localhost local.headup.space es-local.headup.space fr-local.headup.space ja-local.headup.space cn-local.headup.space;

	default_type application/octet-stream;
	charset utf-8;
	sendfile off;
	keepalive_timeout 65;
	client_max_body_size 200M;
	# gzip on;

	include /etc/nginx/mime.types;
	include extra/gzip_params;

	location / {
		include extra/proxy_params;

		add_header "Access-Control-Allow-Origin" $cors_header always;
		add_header "Access-Control-Allow-Credentials" "true" always;
		add_header "Access-Control-Allow-Methods" "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
		add_header "Access-Control-Allow-Headers" "Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,X-CSRF-Token,X-CSRFToken" always;

		# OPTIONS (pre-flight) request from allowed
		if ($request_method = "OPTIONS") {
			add_header "Access-Control-Max-Age" 1728000;
			add_header "Content-Type" "text/plain charset=UTF-8";
			add_header "Content-Length" 0;
			return 204;
		}

		proxy_pass        http://headup_app:5000;
		proxy_redirect    default;
		proxy_redirect    http://headup_app:5000 /;


		proxy_cookie_domain ~\.([a-z]+\.[a-z]+)$ $host;
		proxy_cookie_path / "/; HttpOnly; SameSite=None";
	}

	location /socket.io {
		include extra/proxy_params;
		proxy_pass http://headup_app:5000/socket.io;
		proxy_redirect off;
		proxy_buffering off;

		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
	}

	include extra/headup_folders;
}
